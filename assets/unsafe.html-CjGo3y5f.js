import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as d,i as k,g as n,f as i,l as a,r,o as g,h as t}from"./app-CS5HUc4J.js";const o={};function A(c,s){const e=r("CodeTabs");return g(),d("div",null,[s[40]||(s[40]=k(`<blockquote><p>在 Hulo 中，unsafe 用于引入不受类型系统保护的 <em>原生代码块</em>，以实现与底层系统或外部语言（如 Bash、PowerShell、Batch 等）的集成。它为开发者提供了直接操作系统资源、调用原生命令或执行高性能任务的能力。</p></blockquote><p>// 注释那块还要介绍 @hulo-build</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><h3 id="简易" tabindex="-1"><a class="header-anchor" href="#简易"><span>简易</span></a></h3><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\${</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字"><span>关键字</span></a></h3><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  原生代码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h2 id="嵌入代码块" tabindex="-1"><a class="header-anchor" href="#嵌入代码块"><span>嵌入代码块</span></a></h2><p>有了 unsafe 语句，可以很轻松的嵌入平台独特的代码块。</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>下列仅作为演示使用，非必要请勿直接使用。因为 Hulo 在编译后都会自动生成。</p></div><p><strong>输入：</strong></p>`,11)),n(e,{id:"33",data:[{id:"bash"},{id:"batch"},{id:"powershell"},{id:"vbs"},{id:"amber"}],"tab-id":"stmt"},{title0:a(({value:h,isActive:l})=>s[0]||(s[0]=[t("bash")])),title1:a(({value:h,isActive:l})=>s[1]||(s[1]=[t("batch")])),title2:a(({value:h,isActive:l})=>s[2]||(s[2]=[t("powershell")])),title3:a(({value:h,isActive:l})=>s[3]||(s[3]=[t("vbs")])),title4:a(({value:h,isActive:l})=>s[4]||(s[4]=[t("amber")])),tab0:a(({value:h,isActive:l})=>s[5]||(s[5]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"${#!/bin/bash}")])])])],-1)])),tab1:a(({value:h,isActive:l})=>s[6]||(s[6]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"${@echo off}")])])])],-1)])),tab2:a(({value:h,isActive:l})=>s[7]||(s[7]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"${#Requires -Version 7.0}")])])])],-1)])),tab3:a(({value:h,isActive:l})=>s[8]||(s[8]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"${Option Explicit}")])])])],-1)])),tab4:a(({value:h,isActive:l})=>s[9]||(s[9]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"${#[allow_nested_if_else]}")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"fn"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," foo"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"() {")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"    // ...")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])])],-1)])),_:1}),s[41]||(s[41]=i("p",null,[i("strong",null,"输出：")],-1)),n(e,{id:"53",data:[{id:"bash"},{id:"batch"},{id:"powershell"},{id:"vbs"},{id:"amber"}],"tab-id":"stmt"},{title0:a(({value:h,isActive:l})=>s[10]||(s[10]=[t("bash")])),title1:a(({value:h,isActive:l})=>s[11]||(s[11]=[t("batch")])),title2:a(({value:h,isActive:l})=>s[12]||(s[12]=[t("powershell")])),title3:a(({value:h,isActive:l})=>s[13]||(s[13]=[t("vbs")])),title4:a(({value:h,isActive:l})=>s[14]||(s[14]=[t("amber")])),tab0:a(({value:h,isActive:l})=>s[15]||(s[15]=[i("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"#!/bin/bash")])])])],-1)])),tab1:a(({value:h,isActive:l})=>s[16]||(s[16]=[i("div",{class:"language-batch","data-highlighter":"shiki","data-ext":"batch",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"@"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"echo"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," off")])])])],-1)])),tab2:a(({value:h,isActive:l})=>s[17]||(s[17]=[i("div",{class:"language-powershell","data-highlighter":"shiki","data-ext":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"#"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-light-font-style":"italic","--shiki-dark":"#C678DD","--shiki-dark-font-style":"italic"}},"Requires -Version"),i("span",{style:{"--shiki-light":"#383A42","--shiki-light-font-style":"italic","--shiki-dark":"#E06C75","--shiki-dark-font-style":"italic"}}," 7.0")])])])],-1)])),tab3:a(({value:h,isActive:l})=>s[18]||(s[18]=[i("div",{class:"language-vb","data-highlighter":"shiki","data-ext":"vb",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"Option Explicit")])])])],-1)])),tab4:a(({value:h,isActive:l})=>s[19]||(s[19]=[i("div",{class:"language-amber","data-highlighter":"shiki","data-ext":"amber",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"#[allow_nested_if_else]")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"fun"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," foo"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"() {")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"    // ...")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"}")])])])],-1)])),_:1}),s[42]||(s[42]=k(`<h2 id="extern" tabindex="-1"><a class="header-anchor" href="#extern"><span>extern</span></a></h2><p>在 Hulo 中，<code>extern</code> 用于 显式导出 <code>unsafe</code> 代码块中定义的变量、函数等，使它们能够在 Hulo 的主流程中以 <em>受控、类型化的方式被访问和调用</em>。</p><div class="hint-container info"><p class="hint-container-title">核心作用</p><ul><li>将原生代码中的变量或函数引入到 Hulo 类型系统中</li><li>允许原生函数以 Hulo 的语法格式调用</li><li>提高可读性与代码组织性，避免混乱的内联原生代码调用</li></ul><p><code>extern</code> 搭配 <code>unsafe</code> 使用，可将低层平台行为抽象为高层可管理的接口。</p></div><p>下面我们将以 bash 脚本为例，讲述如何利用 <code>extern</code> 和 <code>unsafe</code> 结合。</p><h3 id="导出变量" tabindex="-1"><a class="header-anchor" href="#导出变量"><span>导出变量</span></a></h3><p><strong>输入：</strong></p><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=$(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> +%</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  # </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">秒级时间戳</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">millis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=$(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> +%</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">%</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">3N</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  # </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">毫秒级</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">（</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">需GNU</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> date</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">extern</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">millis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">num</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $timestamp</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $millis</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +%s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 秒级时间戳</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">millis</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">date</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +%s%3N</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 毫秒级（需GNU date）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $timestamp</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $millis</span></span></code></pre></div><p>在上述示例中，我们在 <code>unsafe</code> 代码块中用 Bash 获取时间戳。随后，通过 <code>extern</code> 将变量导出，并声明其类型为 num。这样我们就可以在 Hulo 中像访问普通变量一样使用它们。</p><h3 id="导出函数" tabindex="-1"><a class="header-anchor" href="#导出函数"><span>导出函数</span></a></h3><p><strong>输入：</strong></p><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    local</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  # </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">第一个参数</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    local</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  # </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">第二个参数</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    local</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=$((</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> + </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$result</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  # </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">通过echo返回值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">extern</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> num</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$value</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 第一个参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 第二个参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$((</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$result</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 通过echo返回值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sum</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>同导出变量的示例类似，借助 <code>extern</code> 我们可以很轻松的导出函数，并声明其类型。从而在主流程中访问。</p><div class="hint-container warning"><p class="hint-container-title">注意事项</p><ul><li><code>extern</code> 不会执行代码，仅声明接口</li><li>必须配合 <code>unsafe</code> 使用</li><li>不同平台的语法差异由用户自行保证</li><li>提供类型声明是为了让 Hulo 在语义层面提供安全提示，但并不真正影响运行时行为</li></ul></div><h2 id="嵌入表达式" tabindex="-1"><a class="header-anchor" href="#嵌入表达式"><span>嵌入表达式</span></a></h2><p>在 Hulo 中，<code>unsafe</code> 语句块不仅可以编写完整的原生代码段，也允许你将原生命令结果直接嵌入表达式中，就像使用函数调用一样。这种用法适用于简单、轻量的调用场景，无需显式导出变量或定义函数。</p><p>接下来我们以获取秒级时间戳（自1970-01-01）为例：</p>`,20)),n(e,{id:"162",data:[{id:"bash"},{id:"batch"},{id:"powershell"},{id:"vbs"},{id:"amber"}],"tab-id":"expr"},{title0:a(({value:h,isActive:l})=>s[20]||(s[20]=[t("bash")])),title1:a(({value:h,isActive:l})=>s[21]||(s[21]=[t("batch")])),title2:a(({value:h,isActive:l})=>s[22]||(s[22]=[t("powershell")])),title3:a(({value:h,isActive:l})=>s[23]||(s[23]=[t("vbs")])),title4:a(({value:h,isActive:l})=>s[24]||(s[24]=[t("amber")])),tab0:a(({value:h,isActive:l})=>s[25]||(s[25]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"let"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = ${$(date +%s)}")])])])],-1)])),tab1:a(({value:h,isActive:l})=>s[26]||(s[26]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},`\${for /F "tokens=2 delims==" %%I in ('wmic os get localdatetime /value') do set datetime=%%I}`)]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"let"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = ${%datetime:\\~0,14%}")])])])],-1)])),tab2:a(({value:h,isActive:l})=>s[27]||(s[27]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"let"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},' = ${[int][double]::Parse((Get-Date -UFormat "%s"))}')])])])],-1)])),tab3:a(({value:h,isActive:l})=>s[28]||(s[28]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"let"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},' = ${DateDiff("s", "01/01/1970 00:00:00", Now())}')])])])],-1)])),tab4:a(({value:h,isActive:l})=>s[29]||(s[29]=[i("div",{class:"language-hulo","data-highlighter":"shiki","data-ext":"hulo",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},'${import * from "std/date"}')]),t(`
`),i("span",{class:"line"}),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"extern"),i("span",{style:{"--shiki-light":"#383A42","--shiki-light-font-style":"inherit","--shiki-dark":"#E06C75","--shiki-dark-font-style":"italic"}}," date_now"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": () "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"->"),i("span",{style:{"--shiki-light":"#C18401","--shiki-dark":"#E5C07B"}}," num")]),t(`
`),i("span",{class:"line"}),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"let"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"date_now"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")])])])],-1)])),_:1}),s[43]||(s[43]=i("p",null,"编译后：",-1)),n(e,{id:"185",data:[{id:"bash"},{id:"batch"},{id:"powershell"},{id:"vbs"},{id:"amber"}],"tab-id":"expr"},{title0:a(({value:h,isActive:l})=>s[30]||(s[30]=[t("bash")])),title1:a(({value:h,isActive:l})=>s[31]||(s[31]=[t("batch")])),title2:a(({value:h,isActive:l})=>s[32]||(s[32]=[t("powershell")])),title3:a(({value:h,isActive:l})=>s[33]||(s[33]=[t("vbs")])),title4:a(({value:h,isActive:l})=>s[34]||(s[34]=[t("amber")])),tab0:a(({value:h,isActive:l})=>s[35]||(s[35]=[i("div",{class:"language-bash","data-highlighter":"shiki","data-ext":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"$("),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"date"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," +%s"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},")")])])])],-1)])),tab1:a(({value:h,isActive:l})=>s[36]||(s[36]=[i("div",{class:"language-batch","data-highlighter":"shiki","data-ext":"batch",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"for"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," /F "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"tokens=2 delims=="'),i("span",{style:{"--shiki-light":"#383A42","--shiki-light-font-style":"inherit","--shiki-dark":"#E06C75","--shiki-dark-font-style":"italic"}}," %%I"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," in"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ('wmic os get localdatetime /value') "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"do"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," set"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," datetime"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-light-font-style":"inherit","--shiki-dark":"#E06C75","--shiki-dark-font-style":"italic"}},"%%I")]),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"set"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"%datetime:~"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},","),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"14"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"%")])])])],-1)])),tab2:a(({value:h,isActive:l})=>s[37]||(s[37]=[i("div",{class:"language-powershell","data-highlighter":"shiki","data-ext":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," ="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ["),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"int"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]["),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"double"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"]::Parse(("),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"Get-Date"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," -"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"UFormat "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"%s"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"))")])])])],-1)])),tab3:a(({value:h,isActive:l})=>s[38]||(s[38]=[i("div",{class:"language-vb","data-highlighter":"shiki","data-ext":"vb",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"timestamp"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," = "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"DateDiff"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"s"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"01/01/1970 00:00:00"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"Now"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"())")])])])],-1)])),tab4:a(({value:h,isActive:l})=>s[39]||(s[39]=[i("div",{class:"language-amber","data-highlighter":"shiki","data-ext":"amber",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," *"),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," from"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "std/date"')]),t(`
`),i("span",{class:"line"}),t(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"let"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," timestamp"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," ="),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," date_now"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"()")])])])],-1)])),_:1}),s[44]||(s[44]=k(`<p>在上述代码中有一个共同特点：<code>timestamp</code> 变量作为受 Hulo 类型系统管理的左值，而原生代码作为右值被嵌入并赋值。这说明，即便是非安全代码，也可以在类型系统的保护下安全嵌入和使用。</p><h2 id="嵌入条件语句" tabindex="-1"><a class="header-anchor" href="#嵌入条件语句"><span>嵌入条件语句</span></a></h2><h2 id="嵌入循环" tabindex="-1"><a class="header-anchor" href="#嵌入循环"><span>嵌入循环</span></a></h2><h2 id="模板" tabindex="-1"><a class="header-anchor" href="#模板"><span>模板</span></a></h2><p>对于代码块操作，有时候会有些需求将 Hulo 代码更定制化的嵌入原生中，这时候就需要模板。</p><h3 id="模板语法" tabindex="-1"><a class="header-anchor" href="#模板语法"><span>模板语法</span></a></h3><p><code>{{ }}</code><br> 模板语法都包含在 <code>{{</code> 和 <code>}}</code> 中间。</p><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h3><p>模板注释没有单行注释，默认就是支持多行注释。同正常的注释一样，不支持嵌套，必须紧贴分界符。注释过的代码片段，在编译后会消失。</p><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  {{/* 这是单行注释 */}}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  {{/*
      这是一个
          多行注释
  */}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="pipeline" tabindex="-1"><a class="header-anchor" href="#pipeline"><span>pipeline</span></a></h3><p>Hulo 模板中支持类似命令中的管道运算符操作，<code>|</code> 会将前面处理的结果（返回值）传递给后一个命令的最后一个位置。</p><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$ {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  echo</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> {{ 1 | sum 2 | sum -3 }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>例如在上述例子中，最终执行完其实就是 <code>echo 0</code> 语句</p><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h3><h3 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断"><span>条件判断</span></a></h3><p>Hulo 的条件判断有以下几种方法</p><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\${</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{if pipeline}} T1 {{end}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{if pipeline}} T1 {{else}} T0 {{end}}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{if pipeline}} T2 {{else if pipeline}} T1 {{else}} T0 {{end}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="循环" tabindex="-1"><a class="header-anchor" href="#循环"><span>循环</span></a></h3><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\${</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{loop pipeline}} T1 {{end}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>示例</p><p><strong>输入：</strong></p><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\${</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{loop i in count}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    echo {{$i}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{end}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>输出：</strong></p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span></code></pre></div><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\${</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{ val := 0 }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{loop i in count}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    echo {{$i}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {{ val += i * 10 }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{end}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 12</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 12345678910</span></span></code></pre></div><h3 id="内置函数" tabindex="-1"><a class="header-anchor" href="#内置函数"><span>内置函数</span></a></h3><p><strong>nameof</strong></p><p>返回这个变量的名字</p><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$value</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \${ {{ nameof value }}}</span></span></code></pre></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>最后的名字肯定是翻译成目标语言后命名的名字，而非原原本本的 value 字面量。他的名字可能的格式为 temp_1 之类的。</p></div><p>除了书写函数名外，Hulo还内置了 <code>@</code> 作为 <code>nameof</code> 的别名，你可以用 <code>@value</code> 替代 <code>nameof value</code></p><p><strong>valueof</strong></p><p>返回这个变量的值</p><p><code>$</code></p><p><strong>refof</strong></p><p>返回这个变量的引用</p><p><code>&amp;</code></p><p><strong>include</strong></p><p><code>include</code> 能够直接内联文件。想象一下，在某些情况下，你只需要 <code>extern</code> 导出函数或者变量，如果直接在 Hulo 中编写代码块，没有代码提示或者编辑器检查可能难以避免某些问题的排查。因此，这个函数的重要性就尤为凸显。</p><p>下面我们假设有这样一个原生文件：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span></code></pre></div><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">\${{{include &quot;math.sh&quot;}}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="自定义函数" tabindex="-1"><a class="header-anchor" href="#自定义函数"><span>自定义函数</span></a></h3><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\${</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{ sum 1 2 }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="子模板" tabindex="-1"><a class="header-anchor" href="#子模板"><span>子模板</span></a></h3><h4 id="声明" tabindex="-1"><a class="header-anchor" href="#声明"><span>声明</span></a></h4><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">{{define X(a, b)}}</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">  echo</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> {{$a}}</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> {{$b}}</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">{{end}}</span></span></code></pre></div><h4 id="调用" tabindex="-1"><a class="header-anchor" href="#调用"><span>调用</span></a></h4><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\${</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {{template X 10 &quot;Hello World&quot; true}}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div>`,51))])}const b=p(o,[["render",A],["__file","unsafe.html.vue"]]),F=JSON.parse('{"path":"/grammar/unsafe.html","title":"Unsafe","lang":"en-US","frontmatter":{"title":"Unsafe","icon":"fas fa-triangle-exclamation","date":"2025-04-20T00:00:00.000Z","category":"grammar","tag":["unsafe"],"license":"MIT","description":"在 Hulo 中，unsafe 用于引入不受类型系统保护的 原生代码块，以实现与底层系统或外部语言（如 Bash、PowerShell、Batch 等）的集成。它为开发者提供了直接操作系统资源、调用原生命令或执行高性能任务的能力。 // 注释那块还要介绍 @hulo-build 语法 简易 关键字 嵌入代码块 有了 unsafe 语句，可以很轻松的嵌入...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/hulo-lang/docs/zh/grammar/unsafe.html"}],["meta",{"property":"og:url","content":"https://github.com/hulo-lang/docs/grammar/unsafe.html"}],["meta",{"property":"og:site_name","content":"Hulo"}],["meta",{"property":"og:title","content":"Unsafe"}],["meta",{"property":"og:description","content":"在 Hulo 中，unsafe 用于引入不受类型系统保护的 原生代码块，以实现与底层系统或外部语言（如 Bash、PowerShell、Batch 等）的集成。它为开发者提供了直接操作系统资源、调用原生命令或执行高性能任务的能力。 // 注释那块还要介绍 @hulo-build 语法 简易 关键字 嵌入代码块 有了 unsafe 语句，可以很轻松的嵌入..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-22T00:32:25.000Z"}],["meta",{"property":"article:tag","content":"unsafe"}],["meta",{"property":"article:published_time","content":"2025-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-22T00:32:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Unsafe\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-22T00:32:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"The Hulo Authors\\",\\"url\\":\\"https://github.com/hulo-lang\\"}]}"]]},"git":{"createdTime":1745162798000,"updatedTime":1745281945000,"contributors":[{"name":"ansurfen","username":"ansurfen","email":"axf593161@gmail.com","commits":3,"url":"https://github.com/ansurfen"}]},"readingTime":{"minutes":5.38,"words":1615},"filePathRelative":"grammar/unsafe.md","localizedDate":"April 20, 2025","autoDesc":true}');export{b as comp,F as data};
