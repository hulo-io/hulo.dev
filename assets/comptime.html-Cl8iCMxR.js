import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as t,i as s,o as e}from"./app-BEhIlFcU.js";const n={};function o(p,i){return e(),t("div",null,i[0]||(i[0]=[s(`<blockquote><p><code>comptime</code> 是编程语言中的一个关键字，表示“编译期执行”。使用 <code>comptime</code> 包裹的代码会在编译阶段而非运行时被求值、执行或展开。本质上是将运行时代码提前到编译期执行，是构建高性能、可扩展语言系统的核心能力之一。它为语言带来了强大的元编程能力，是现代系统语言中越来越常见的设计特性。</p></blockquote><h2 id="常量折叠-constant-folding" tabindex="-1"><a class="header-anchor" href="#常量折叠-constant-folding"><span>常量折叠（constant folding）</span></a></h2><p>在编译期就把常量表达式的结果算出来，避免运行时重复计算。</p><div class="language-hulo" data-highlighter="shiki" data-ext="hulo" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3.14</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> radius</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> area</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">comptime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3.14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$radius</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> * </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$radius</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 编译期直接得出结果 78.5</span></span></code></pre></div><p>在上述示例中，<code>comptime</code> 代码块中的表达式在编译期就被求值并替换，因此对 <code>area</code> 的声明等价于直接写成 <code>const area = 78.5</code>，从而避免了运行时的任何计算开销，提高了性能和效率。</p><h2 id="编译期类" tabindex="-1"><a class="header-anchor" href="#编译期类"><span>编译期类</span></a></h2><h2 id="编译期函数" tabindex="-1"><a class="header-anchor" href="#编译期函数"><span>编译期函数</span></a></h2><h2 id="编译期变量" tabindex="-1"><a class="header-anchor" href="#编译期变量"><span>编译期变量</span></a></h2><p>在 Hulo 中内置了一些编译期变量，便于代码调试</p><ul><li>FILE，获取当前文件名</li><li>LINE, 获取代码行</li><li>CALL，获取调用者</li><li>OS, 获取当前操作系统</li><li>TERM, 获取终端</li></ul><h2 id="编译期宏" tabindex="-1"><a class="header-anchor" href="#编译期宏"><span>编译期宏</span></a></h2><h2 id="comptime-运算符" tabindex="-1"><a class="header-anchor" href="#comptime-运算符"><span>comptime 运算符</span></a></h2>`,12)]))}const r=a(n,[["render",o],["__file","comptime.html.vue"]]),c=JSON.parse('{"path":"/grammar/comptime.html","title":"Comptime","lang":"en-US","frontmatter":{"title":"Comptime","icon":"ghost","category":"grammar","tag":["comptime"],"license":"MIT","description":"comptime 是编程语言中的一个关键字，表示“编译期执行”。使用 comptime 包裹的代码会在编译阶段而非运行时被求值、执行或展开。本质上是将运行时代码提前到编译期执行，是构建高性能、可扩展语言系统的核心能力之一。它为语言带来了强大的元编程能力，是现代系统语言中越来越常见的设计特性。 常量折叠（constant folding） 在编译期就把常...","head":[["meta",{"property":"og:url","content":"https://github.com/hulo-lang/docs/grammar/comptime.html"}],["meta",{"property":"og:site_name","content":"Hulo"}],["meta",{"property":"og:title","content":"Comptime"}],["meta",{"property":"og:description","content":"comptime 是编程语言中的一个关键字，表示“编译期执行”。使用 comptime 包裹的代码会在编译阶段而非运行时被求值、执行或展开。本质上是将运行时代码提前到编译期执行，是构建高性能、可扩展语言系统的核心能力之一。它为语言带来了强大的元编程能力，是现代系统语言中越来越常见的设计特性。 常量折叠（constant folding） 在编译期就把常..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-22T00:32:25.000Z"}],["meta",{"property":"article:tag","content":"comptime"}],["meta",{"property":"article:modified_time","content":"2025-04-22T00:32:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Comptime\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-22T00:32:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"The Hulo Authors\\",\\"url\\":\\"https://github.com/hulo-lang\\"}]}"]]},"git":{"createdTime":1745281945000,"updatedTime":1745281945000,"contributors":[{"name":"ansurfen","username":"ansurfen","email":"axf593161@gmail.com","commits":1,"url":"https://github.com/ansurfen"}]},"readingTime":{"minutes":1.08,"words":325},"filePathRelative":"grammar/comptime.md","localizedDate":"April 22, 2025","autoDesc":true}');export{r as comp,c as data};
